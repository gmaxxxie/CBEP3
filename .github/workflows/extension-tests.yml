# GitHub Actions 工作流 - Chrome 扩展测试
name: Chrome Extension E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-extension:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          x11vnc \
          fluxbox \
          dbus-x11 \
          fonts-liberation \
          libasound2 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libdrm2 \
          libgtk-3-0 \
          libnss3 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libxss1 \
          libxtst6
    
    - name: 安装 Google Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: 验证 Chrome 安装
      run: |
        google-chrome --version
        which google-chrome
    
    - name: 安装项目依赖
      run: npm ci
    
    - name: 安装 Playwright 浏览器
      run: npx playwright install chromium
    
    - name: 启动虚拟显示器
      run: |
        export DISPLAY=:99
        Xvfb :99 -ac -screen 0 1280x1024x24 -nolisten tcp &
        sleep 3
        echo "DISPLAY=:99" >> $GITHUB_ENV
    
    - name: 验证扩展文件
      run: |
        ls -la manifest.json
        ls -la background/
        ls -la sidebar/
        ls -la tests/
    
    - name: 运行 ESLint
      run: npm run lint || true
    
    - name: 运行单元测试
      run: npm test || true
    
    - name: 运行 Chrome 扩展 E2E 测试
      run: |
        export DISPLAY=:99
        npx playwright test tests/headless-extension.test.js --reporter=line
      env:
        CI: true
        DISPLAY: :99
    
    - name: 上传测试报告
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: |
          playwright-report/
          test-results/
          *.png
        retention-days: 7
    
    - name: 上传测试截图
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.node-version }}
        path: |
          debug-*.png
          test-results/**/*.png
        retention-days: 3

  # Docker 测试作业
  test-extension-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 构建测试 Docker 镜像
      run: |
        docker build -f Dockerfile.testing -t cbep3-test .
    
    - name: 运行 Docker 测试
      run: |
        docker run --rm \
          -v $PWD/test-results:/app/test-results \
          cbep3-test npm run test:e2e
    
    - name: 上传 Docker 测试结果
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: docker-test-results
        path: test-results/
        retention-days: 7

  # 性能测试作业
  performance-test:
    runs-on: ubuntu-latest
    needs: test-extension
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 安装依赖
      run: npm ci
    
    - name: 运行性能基准测试
      run: |
        # 创建性能测试脚本
        cat > perf-test.js << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        console.log('📊 扩展性能分析');
        
        // 分析文件大小
        function getDirectorySize(dirPath) {
          let totalSize = 0;
          const files = fs.readdirSync(dirPath, { withFileTypes: true });
          
          for (const file of files) {
            const filePath = path.join(dirPath, file.name);
            if (file.isDirectory()) {
              totalSize += getDirectorySize(filePath);
            } else {
              totalSize += fs.statSync(filePath).size;
            }
          }
          return totalSize;
        }
        
        const extensionSize = getDirectorySize('.');
        const sizeMB = (extensionSize / (1024 * 1024)).toFixed(2);
        
        console.log(`扩展总大小: ${sizeMB} MB`);
        
        // 性能基准
        const benchmarks = {
          extensionSize: sizeMB,
          fileCount: require('child_process').execSync('find . -type f | wc -l').toString().trim(),
          jsFiles: require('child_process').execSync('find . -name "*.js" | wc -l').toString().trim(),
          timestamp: new Date().toISOString()
        };
        
        fs.writeFileSync('performance-report.json', JSON.stringify(benchmarks, null, 2));
        console.log('性能报告已生成');
        EOF
        
        node perf-test.js
    
    - name: 上传性能报告
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: performance-report.json
        retention-days: 30